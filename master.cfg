# -*- python -*-
# ex: set filetype=python:

__author__ = "Chuck Lever"
__copyright__ = "Copyright (c) 2024 Oracle and/or its affiliates."
__license__ = "Public domain"
__version__ = "1.0"

from buildbot.plugins import *
from twisted.python import log
from urllib.parse import urljoin
from datetime import timedelta

c = BuildmasterConfig = {}

c["buildbotNetUsageData"] = None
c["buildbotURL"] = "http://manet.1015granger.net:8010/"
c["builders"] = []
c["configurators"] = [
    util.JanitorConfigurator(logHorizon=timedelta(weeks=4), hour=1, dayOfWeek=6)
]
c["db"] = {
    "db_url": "sqlite:///state.sqlite",
}
c["projects"] = []
c["protocols"] = {"pb": {"port": 9989}}
c["secretsProviders"] = [
    secrets.SecretInAFile(dirname="/usr/local/home/buildmaster/.secrets/")
]
c["services"] = []
c["title"] = "Chuck's BuildBot"
c["titleURL"] = "https://git.kernel.org/pub/scm/linux/kernel/"
c["workers"] = []
c["www"] = {
    "port": 8010,
    "plugins": {
        "badges": {
            "left_pad": 0,
            "right_pad": 0,
            "border_radius": 3,
            "style": "badgeio",
        },
        "console_view": True,
        "grid_view": False,
        "waterfall_view": True,
        "wsgi_dashboards": [],
    },
}

####### WORKERS

c["workers"] = [
    worker.Worker("kdevops-small", util.Secret("worker-kdevops-small"), max_builds=1),
    worker.Worker("kdevops-large", util.Secret("worker-kdevops-large"), max_builds=1),
]

######## FACTORIES

def kdevops_factory(branch, workflow):
    all_steps = [
        steps.Git(
            repourl='https://github.com/chucklever/kdevops.git',
            branch='buildbot-configs',
            mode='full',
            method='clobber',
            shallow=True),
        steps.ShellCommand(
            name = 'configure',
            command = ['make', f'defconfig-{branch}-{workflow}'],
            workdir = 'build/',
            description = 'Configure kdevops',
            haltOnFailure = True),
        steps.ShellCommand(
            name = 'prepare',
            command = ['make'],
            workdir = 'build/',
            description = 'Prepare Ansible environment',
            haltOnFailure = True),
        steps.ShellCommand(
            name = 'bringup',
            command = ['make', 'bringup'],
            workdir = 'build/',
            description = 'Bring up libvirt guests',
            haltOnFailure = True),
        steps.ShellCommand(
            name = 'linux',
            command = ['make', 'V=12', 'linux'],
            workdir = 'build/',
            description = 'Build and install Linux kernel',
            timeout = 3 * 3600,
            haltOnFailure = True),
        steps.ShellCommand(
            name = 'build_tests',
            command = ['make', workflow],
            workdir = 'build/',
            description = f'Run {workflow}',
            haltOnFailure = True),
        steps.ShellCommand(
            name = 'run_tests',
            command = ['make', f'{workflow}-baseline'],
            workdir = 'build/',
            description = f'make {workflow}-baseline',
            timeout = 6 * 3600,
            haltOnFailure = True),
        steps.ShellCommand(
            name = 'clean_up',
            command = ['make', 'destroy'],
            workdir = 'build/',
            description = 'Shut down guests',
            alwaysRun = True),
        ]
    factory = util.BuildFactory(all_steps)
    factory.useProgress = False
    return factory

######## BUILDERS

c['builders'] = [
    util.BuilderConfig(name='nfsd-next-fstests',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-next', 'fstests'),
        locks=[util.MasterLock('nfsd-next-fstests').access('exclusive')]),
    util.BuilderConfig(name='nfsd-next-gitr',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-next', 'gitr'),
        locks=[util.MasterLock('nfsd-next-gitr').access('exclusive')]),
    util.BuilderConfig(name='nfsd-next-ltp',
        workernames=['kdevops-small', 'kdevops-large'],
        factory=kdevops_factory('nfsd-next', 'ltp'),
        locks=[util.MasterLock('nfsd-next-ltp').access('exclusive')]),
    util.BuilderConfig(name='nfsd-next-nfstest',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-next', 'nfstest'),
        locks=[util.MasterLock('nfsd-next-nfstest').access('exclusive')]),
    util.BuilderConfig(name='nfsd-next-pynfs',
        workernames=['kdevops-small', 'kdevops-large'],
        factory=kdevops_factory('nfsd-next', 'pynfs'),
        locks=[util.MasterLock('nfsd-next-pynfs').access('exclusive')]),

    util.BuilderConfig(name='nfsd-fixes-fstests',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-fixes', 'fstests')),
    util.BuilderConfig(name='nfsd-fixes-gitr',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-fixes', 'gitr')),
    util.BuilderConfig(name='nfsd-fixes-ltp',
        workernames=['kdevops-small', 'kdevops-large'],
        factory=kdevops_factory('nfsd-fixes', 'ltp')),
    util.BuilderConfig(name='nfsd-fixes-nfstest',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-fixes', 'nfstest')),
    util.BuilderConfig(name='nfsd-fixes-pynfs',
        workernames=['kdevops-small', 'kdevops-large'],
        factory=kdevops_factory('nfsd-fixes', 'pynfs')),

    util.BuilderConfig(name='nfsd-testing-fstests',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-testing', 'fstests')),
    util.BuilderConfig(name='nfsd-testing-gitr',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-testing', 'gitr')),
    util.BuilderConfig(name='nfsd-testing-ltp',
        workernames=['kdevops-small', 'kdevops-large'],
        factory=kdevops_factory('nfsd-testing', 'ltp')),
    util.BuilderConfig(name='nfsd-testing-nfstest',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-testing', 'nfstest')),
    util.BuilderConfig(name='nfsd-testing-pynfs',
        workernames=['kdevops-small', 'kdevops-large'],
        factory=kdevops_factory('nfsd-testing', 'pynfs')),

    util.BuilderConfig(name='nfsd-6.1.y-fstests',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-6.1.y', 'fstests')),
    util.BuilderConfig(name='nfsd-6.1.y-gitr',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-6.1.y', 'gitr')),
    util.BuilderConfig(name='nfsd-6.1.y-ltp',
        workernames=['kdevops-small'],
        factory=kdevops_factory('nfsd-6.1.y', 'ltp')),
    util.BuilderConfig(name='nfsd-6.1.y-nfstest',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-6.1.y', 'nfstest')),
    util.BuilderConfig(name='nfsd-6.1.y-pynfs',
        workernames=['kdevops-small'],
        factory=kdevops_factory('nfsd-6.1.y', 'pynfs')),

    util.BuilderConfig(name='nfsd-5.15.y-fstests',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-5.15.y', 'fstests')),
    util.BuilderConfig(name='nfsd-5.15.y-gitr',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-5.15.y', 'gitr')),
    util.BuilderConfig(name='nfsd-5.15.y-ltp',
        workernames=['kdevops-small'],
        factory=kdevops_factory('nfsd-5.15.y', 'ltp')),
    util.BuilderConfig(name='nfsd-5.15.y-nfstest',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-5.15.y', 'nfstest')),
    util.BuilderConfig(name='nfsd-5.15.y-pynfs',
        workernames=['kdevops-small'],
        factory=kdevops_factory('nfsd-5.15.y', 'pynfs')),

    util.BuilderConfig(name='nfsd-5.10.y-fstests',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-5.10.y', 'fstests')),
    util.BuilderConfig(name='nfsd-5.10.y-gitr',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-5.10.y', 'gitr')),
    util.BuilderConfig(name='nfsd-5.10.y-ltp',
        workernames=['kdevops-small'],
        factory=kdevops_factory('nfsd-5.10.y', 'ltp')),
    util.BuilderConfig(name='nfsd-5.10.y-nfstest',
        workernames=['kdevops-large'],
        factory=kdevops_factory('nfsd-5.10.y', 'nfstest')),
    util.BuilderConfig(name='nfsd-5.10.y-pynfs',
        workernames=['kdevops-small'],
        factory=kdevops_factory('nfsd-5.10.y', 'pynfs')),
]

####### CHANGESOURCES

c['change_source'] = [
    changes.GitPoller(
        'https://git.kernel.org/pub/scm/linux/kernel/git/cel/linux.git',
        branches=['nfsd-next', 'nfsd-fixes', 'nfsd-testing', 'nfsd-6.1.y', 'nfsd-5.15.y', 'nfsd-5.10.y']),
    changes.GitPoller(
        'https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git',
        branches=['queue/5.4', 'queue/5.10', 'queue/5.15', 'queue/6.1', 'queue/6.6']),
    changes.GitPoller(
        'https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git',
        branches=['master']),
]

####### SCHEDULERS

c['schedulers'] = [
    schedulers.SingleBranchScheduler(
        name='scheduler-nfsd-next',
        change_filter=util.ChangeFilter(
            repository='https://git.kernel.org/pub/scm/linux/kernel/git/cel/linux.git',
                branch='nfsd-next'),
        treeStableTimer=300,
        builderNames=[
            'nfsd-next-fstests',
            'nfsd-next-gitr',
            'nfsd-next-ltp',
            'nfsd-next-nfstest',
            'nfsd-next-pynfs']),
    schedulers.ForceScheduler(
        name='force-nfsd-next',
        builderNames=[
            'nfsd-next-fstests',
            'nfsd-next-gitr',
            'nfsd-next-ltp',
            'nfsd-next-nfstest',
            'nfsd-next-pynfs']),

    schedulers.SingleBranchScheduler(
        name='scheduler-nfsd-fixes',
        change_filter=util.ChangeFilter(
            repository='https://git.kernel.org/pub/scm/linux/kernel/git/cel/linux.git',
                branch='nfsd-fixes'),
        treeStableTimer=300,
        builderNames=[
            'nfsd-fixes-fstests',
            'nfsd-fixes-gitr',
            'nfsd-fixes-ltp',
            'nfsd-fixes-nfstest',
            'nfsd-fixes-pynfs']),
    schedulers.ForceScheduler(
        name='force-nfsd-fixes',
        builderNames=[
            'nfsd-fixes-fstests',
            'nfsd-fixes-gitr',
            'nfsd-fixes-ltp',
            'nfsd-fixes-nfstest',
            'nfsd-fixes-pynfs']),

    schedulers.ForceScheduler(
        name='force-nfsd-testing',
        builderNames=[
            'nfsd-testing-fstests',
            'nfsd-testing-gitr',
            'nfsd-testing-ltp',
            'nfsd-testing-nfstest',
            'nfsd-testing-pynfs']),
    schedulers.ForceScheduler(
        name='force-nfsd-6-1-y',
        builderNames=[
            'nfsd-6.1.y-fstests',
            'nfsd-6.1.y-gitr',
            'nfsd-6.1.y-ltp',
            'nfsd-6.1.y-nfstest',
            'nfsd-6.1.y-pynfs']),
    schedulers.ForceScheduler(
        name='force-nfsd-5-15-y',
        builderNames=[
            'nfsd-5.15.y-fstests',
            'nfsd-5.15.y-gitr',
            'nfsd-5.15.y-ltp',
            'nfsd-5.15.y-nfstest',
            'nfsd-5.15.y-pynfs']),
    schedulers.ForceScheduler(
        name='force-nfsd-5-10-y',
        builderNames=[
            'nfsd-5.10.y-fstests',
            'nfsd-5.10.y-gitr',
            'nfsd-5.10.y-ltp',
            'nfsd-5.10.y-nfstest',
            'nfsd-5.10.y-pynfs']),
]
